[{"/home/rkun/Playground/c3SNS/frontend/src/App.tsx":"1","/home/rkun/Playground/c3SNS/frontend/src/pages/Callback.tsx":"2","/home/rkun/Playground/c3SNS/frontend/src/store/auth.ts":"3","/home/rkun/Playground/c3SNS/frontend/src/store/index.ts":"4","/home/rkun/Playground/c3SNS/frontend/src/store/user.ts":"5","/home/rkun/Playground/c3SNS/frontend/src/utils/apiClientGenerator.ts":"6","/home/rkun/Playground/c3SNS/frontend/src/index.tsx":"7"},{"size":817,"mtime":1610636180410,"results":"8","hashOfConfig":"9"},{"size":1404,"mtime":1610636051080,"results":"10","hashOfConfig":"9"},{"size":477,"mtime":1610630265510,"results":"11","hashOfConfig":"9"},{"size":361,"mtime":1610627768900,"results":"12","hashOfConfig":"9"},{"size":590,"mtime":1610630279440,"results":"13","hashOfConfig":"9"},{"size":396,"mtime":1610629011529,"results":"14","hashOfConfig":"9"},{"size":616,"mtime":1610635863750,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"yg9udj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rkun/Playground/c3SNS/frontend/src/App.tsx",["33","34","35","36"],"import React, { useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { RootState } from './store/index'\nimport Callback from './pages/Callback'\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const user = useSelector((state: RootState) => state.user)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>C3SNS</h1>\n        <a href=\"http://localhost:3000/api/v1/auth/discord?auth_origin_url=http://localhost:3001/callback\">Discord Login</a>\n        <img src={user.image}></img>\n      </header>\n      <Router>\n        <Switch>\n          <Route path=\"/callback\"><Callback /></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/rkun/Playground/c3SNS/frontend/src/pages/Callback.tsx",["37","38","39"],"/home/rkun/Playground/c3SNS/frontend/src/store/auth.ts",[],"/home/rkun/Playground/c3SNS/frontend/src/store/index.ts",[],"/home/rkun/Playground/c3SNS/frontend/src/store/user.ts",["40"],"import { Action, createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport type User = {\n    id: number,\n    provider: 'discord',\n    uid: string,\n    name: string,\n    image: string,\n    email: string\n}\n\nconst initialState: User = {\n    id: 0,\n    provider: 'discord',\n    uid: '',\n    name: '',\n    image: '',\n    email: ''\n}\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser(state, action: PayloadAction<User>) {\n            return action.payload\n        }\n    }\n})\n\nexport const actions = userSlice.actions\n\nexport default userSlice","/home/rkun/Playground/c3SNS/frontend/src/utils/apiClientGenerator.ts",["41"],"import store from '../store/index'\nimport axios from 'axios'\n\nconst apiClientGenerator = (auth: any) => {\n    return axios.create({\n        baseURL: 'http://localhost:3000/api/v1',\n        headers: {\n            'access-token': auth.authToken,\n            'token-type': 'Bearer',\n            'client': auth.client,\n            'uid': auth.uid\n        }\n    })\n}\n\nexport default apiClientGenerator","/home/rkun/Playground/c3SNS/frontend/src/index.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"47","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":17,"column":9,"nodeType":"50","endLine":17,"endColumn":31},{"ruleId":"42","severity":1,"message":"51","line":9,"column":11,"nodeType":"44","messageId":"45","endLine":9,"endColumn":15},{"ruleId":"42","severity":1,"message":"52","line":10,"column":11,"nodeType":"44","messageId":"45","endLine":10,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":36,"column":8,"nodeType":"55","endLine":36,"endColumn":10,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"57","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":16},{"ruleId":"42","severity":1,"message":"58","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'auth' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserAndStore'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'Action' is defined but never used.","'store' is defined but never used.",{"desc":"60","fix":"61"},"Update the dependencies array to be: [fetchUserAndStore]",{"range":"62","text":"63"},[1295,1297],"[fetchUserAndStore]"]